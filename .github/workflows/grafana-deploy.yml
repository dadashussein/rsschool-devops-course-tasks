name: Deploy Grafana to Kubernetes

on:
  push:
    branches: [ task-8 ]
  pull_request:
    branches: [ task-8 ]
  workflow_dispatch:

env:
  KUBERNETES_NAMESPACE: monitoring
  AWS_REGION: eu-west-2

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubectl for K3s
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config
        
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'

      - name: Add Grafana Helm repo
        run: |
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update

      - name: Create namespace
        run: |
          kubectl create namespace $KUBERNETES_NAMESPACE --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Grafana
        run: |
          helm upgrade --install grafana grafana/grafana \
            --namespace $KUBERNETES_NAMESPACE \
            --values grafana-values.yaml \
            --set service.type=NodePort \
            --set adminPassword=rolling \
            --wait --timeout 10m

      - name: Verify deployment
        run: |
          kubectl -n $KUBERNETES_NAMESPACE rollout status deployment/grafana
          
      - name: Get Grafana NodePort
        run: |
          echo "Grafana NodePort URL: http://$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="ExternalIP")].address}"):$(kubectl get svc -n monitoring grafana -o jsonpath='{.spec.ports[0].nodePort}')"
