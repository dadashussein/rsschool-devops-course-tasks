name: Terraform Workflow

on:
  push:
    branches:
    - main
    - task_5
  pull_request:
    branches:
    - main
    - task_5

# Define reusable environment variables
env:
  AWS_REGION: eu-central-1
  ROLE_ARN: arn:aws:iam::051826725870:role/git_action
  TF_STATE_BUCKET: dadodevops

# Define reusable jobs configurations
jobs:
  terraform-check:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/task_5' || github.ref == 'refs/heads/main' ||
      github.event_name == 'pull_request'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    - name: Terraform Format Check
      run: |
        if ! terraform fmt -check -recursive; then
          terraform fmt -recursive
          git diff
          exit 1
        fi

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Post Check Status
      if: success()
      run: |
        echo "✅ Terraform configuration is valid"
        echo "✅ Terraform formatting is correct"

  terraform-plan:
    runs-on: ubuntu-latest
    needs: terraform-check
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ env.ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Initialize and Plan
      run: |
        terraform init
        terraform plan -out=tfplan

    - name: Save Plan Artifact
      uses: actions/upload-artifact@v2
      with:
        name: tfplan
        path: tfplan
        retention-days: 1

  terraform-apply:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [ terraform-check, terraform-plan ]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ env.ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Download Plan Artifact
      uses: actions/download-artifact@v2
      with:
        name: tfplan

    - name: Terraform Init
      run: terraform init

    - name: Import State Bucket (if needed)
      run: |
        terraform import aws_s3_bucket.terraform_state ${{ env.TF_STATE_BUCKET }} || true
      continue-on-error: true

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan
