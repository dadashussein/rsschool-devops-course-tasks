name: Terraform Workflow

on:
  push:
    branches:
      - task_5
  pull_request:
    branches:
      - main

jobs:
  terraform-check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Format Check
      run: terraform fmt -check -recursive || (terraform fmt -recursive && echo "Formatted Terraform files.")

  terraform-plan:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::051826725870:role/git_action
        aws-region: eu-central-1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan

  terraform-apply:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [terraform-check, terraform-plan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::051826725870:role/git_action
        aws-region: eu-central-1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Import (if needed)
      run: |
        terraform import aws_s3_bucket.terraform_state dadodevops || true
      continue-on-error: true

    - name: Terraform Apply
      run: terraform apply -auto-approve