name: Terraform Workflow

on:
  push:
    branches: [task-2]
  pull_request:
    branches: [task-2]

jobs:
  terraform-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./task_2
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2
    - run: terraform fmt -check -recursive || (terraform fmt -recursive && git diff --exit-code)

  terraform-plan:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ./task_2
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
    - run: terraform init
    - run: terraform plan -out=tfplan
    - uses: actions/upload-artifact@v3
      with:
        name: tfplan
        path: ./task_2/tfplan

  terraform-apply:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [terraform-check, terraform-plan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    defaults:
      run:
        working-directory: ./task_2
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
    - uses: actions/download-artifact@v3
      with:
        name: tfplan
        path: ./task_2
    - run: terraform init
    - run: terraform import aws_s3_bucket.terraform_state dadodevops || true
      continue-on-error: true
    - run: terraform apply tfplan
